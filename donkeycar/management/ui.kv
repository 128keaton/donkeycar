
<FileChooserPopup>:
    title: "Choose the directory"
    size_hint: 1.0, 1.0
    auto_dismiss: False
    pos_hint: {'center_x': .5, 'center_y': .5}

    BoxLayout:
        orientation: "vertical"
        FileChooser:
            id: file_chooser
            rootpath: root.root_path
            dirselect: True
            FileChooserListLayout

        BoxLayout:
            size_hint: (1, 0.1)
            pos_hint: {'center_x': .5, 'center_y': .5}
            spacing: 20
            Button:
                text: "Cancel"
                on_release: root.dismiss()
            Button:
                text: "Load"
                on_release: root.load(file_chooser.selection)
                disabled: file_chooser.selection==[]

<AutoLabel@Label>
    text_size: self.size
    halign: 'center'
    valign: 'middle'

<ConfigManager>
    title: 'Choose the car directory'
    orientation: 'horizontal'
    on_config:
        # car_dir.text = self.file_path
        app.layout.ids.tub_loader.ids.tub_button.disabled = False
        app.layout.ids.tub_loader.root_path = self.file_path
        app.layout.ids.status.text = 'Config loaded from' + self.file_path
    Button:
        text: 'Load car directory'
        size_hint_x: 0.5
        on_press: root.open_popup()
    AutoLabel:
        id: car_dir
        text: root.file_path

<TubLoader>
    title: 'Choose the tub directory'
    orientation: 'horizontal'
    Button:
        id: tub_button
        text: 'Load Tub'
        size_hint_x: 0.5
        disabled: True
        on_press: root.open_popup()
    AutoLabel:
        id: tub_dir
        text: root.file_path

<LabelBar>:
    orientation: 'horizontal'
    Label:
        text: 'New label {:}'.format(root.i)
    ProgressBar:
        value: root.i * 10

<DataPanel>
    cols: 1
    GridLayout:
        cols: 2
        Button:
            text: 'Add box'
            size_hint_y: None
            height: common_height
            on_press: root.add_label()
        Button:
            text: 'Remove box'
            size_hint_y: None
            height: common_height
            on_press: root.remove_label()

<ControlPanel>
    orientation: 'vertical'
    GridLayout:
        cols: 2
        Label:
            id: record_num
            text: root.record_display
        Spinner:
            pos_hint: {'center': (.5, .5)}
            text: '1.00'
            values: ['0.25', '0.50', '1.00', '1.50', '2.00', '3.00', '4.00']
            on_text:
                root.speed = float(self.text)
                app.layout.ids.status.text = f'Setting speed to {self.text} - you can also use the +/- keys.'
                root.restart()
        Button:
            id: step_bwd
            text: '<'
            on_press:
                root.start(fwd=False)
                app.layout.ids.status.text = 'Donkey step backward - you can <left> key as well.'
            on_release:
                root.stop()
        Button:
            id: step_fwd
            text: '>'
            on_press:
                root.start(fwd=True)
                app.layout.ids.status.text = 'Donkey step forward - you can use <right> key as well.'
            on_release:
                root.stop()
        Button:
            id: run_bwd
            text: '<<'
            on_press:
                root.start(fwd=False, continuous=True)
                app.layout.ids.status.text = 'Donkey running backwards...'
                run_bwd.disabled = True
                run_fwd.disabled = True
                step_fwd.disabled = True
                step_bwd.disabled = True
        Button:
            id: run_fwd
            text: '>>'
            on_press:
                root.start(fwd=True, continuous=True)
                app.layout.ids.status.text = 'Donkey running...'
                run_fwd.disabled = True
                run_bwd.disabled = True
                step_fwd.disabled = True
                step_bwd.disabled = True

    Button:
        size_hint_y: 0.3
        text: 'Stop'
        on_press:
            root.stop()
            run_fwd.disabled = False; run_bwd.disabled = False
            step_fwd.disabled = False; step_bwd.disabled = False
            app.layout.ids.status.text = 'Donkey stopped'

<TubEditor>
    orientation: 'horizontal'
    size_hint_y: None
    height: common_height
    on_lr:
        msg = f'Setting range, '
        if root.lr[0] < root.lr[1]: msg += (f'affecting records inside [{root.lr[0]}, {root.lr[1]}) ' + \
        '- you can affect records outside by setting left > right')
        else: msg += (f'affecting records outside ({root.lr[1]}, {root.lr[0]}] ' + \
        '- you can affect records inside by setting left < right')
        app.layout.ids.status.text = msg
    Button:
        text: 'Set left'
        on_press: root.set_lr(True)
    Button:
        text: 'Set right'
        on_press: root.set_lr(False)
    Label:
        text: '[' + str(root.lr[0]) + ', ' + str(root.lr[1]) + ')'
        # text: f'Index range [{root.lr[0]}, {root.lr[1]})'
    Button:
        text: 'Delete'
        on_press:
            root.del_lr(True)
            msg = f'Delete records {root.lr} - press <Reload tub> to see the ' \
            + f'effect, but you can delete multiple ranges before doing so.'
            app.layout.ids.status.text = msg
    Button:
        text: 'Restore'
        on_press:
            root.del_lr(False)
            msg = f'Restore records {root.lr} - press <Reload tub> to see the ' \
            + f'effect, but you can restore multiple ranges before doing so.'
            app.layout.ids.status.text = msg
    Button:
        text: 'Reload Tub'
        on_press: app.layout.ids.tub_loader.update_tub(reload=True)


<TubFilter>:
    id: tub_filter
    orientation: 'horizontal'
    size_hint_y: None
    height: common_height
    Button:
        text: 'Set filter'
        size_hint_x: 0.2
        on_press: root.update_filter()
    TextInput:
        id: record_filter
        text: 'user/throttle > 0.1'
        multiline: False

<-FullImage>:
    # texture: self.get_texture()
    canvas:
        Color:
            rgb: (1, 1, 1)
        Rectangle:
            texture: self.texture
            size: self.width, self.height
            pos: self.x, self.y

<TubWindow>:
    orientation: 'vertical'
    #:set common_height 60
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: common_height
        ConfigManager:
            id: config_manager
        TubLoader:
            id: tub_loader
    BoxLayout:
        orientation: 'horizontal'
        spacing: 5
        DataPanel
        FullImage:
            id: img
        ControlPanel
            id: control_panel
    Slider:
        id: slider
        min: 0
        max: tub_loader.len - 1
        value: 0
        size_hint_y: None
        height: common_height
        on_value: app.layout.index = int(self.value)
    TubEditor
    TubFilter:
        id: tub_filter
    Label:
        text: 'Graphics here'
    Label:
        id: status
        text_size: self.size
        halign: 'left'
        valign: 'bottom'
        text: 'Status: here'